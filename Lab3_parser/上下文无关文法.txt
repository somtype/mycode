program -> 	block
block	->	{ decls stmts }
decls	-> 	decl decls | nul
decl	->	type id;
type 	->	int | float | char
stmts 	-> 	stmt stmts | nul
stmt	->	id = expr ;
            | if ( bool ) stmt
            | if ( bool ) stmt else stmt
            | while ( bool ) stmt
            | do stmt while ( bool ) ;
            | break ;
            | block
bool	->	expr < expr
            | expr <= expr
            | expr > expr
            | expr >= expr
            | expr
expr 	-> 	term expr_res
expr_res->	+ term expr_res
            | - term expr_res
            | nul
term 	->	factor term_res
term_res->	* factor term_res
            | / factor term_res
            | nul
factor 	-> 	( expr ) | id | num